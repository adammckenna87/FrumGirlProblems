@model SignInViewModel

@{
    ViewData["Title"] = "SignIn";
}


<div class="container mb-5" style="color:black;">
    <h2 class="mt-6">Sign in</h2>
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <div asp-validation-summary="All"></div>
        </div>
    }

    <form method="post" asp-action="SignIn" asp-controller="Account">
        <div class="form-group">
            <label asp-for="email"></label>
            <input asp-for="email" type="email" class="@(ViewData.ModelState.ContainsKey("email") && ViewData.ModelState["email"].Errors.Any() ? "form-control is-invalid" : "form-control")" aria-describedby="emailHelp" placeholder="Enter email">
            <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
            @if (ViewData.ModelState.ContainsKey("email"))
            {
             
               foreach (var error in ViewData.ModelState["email"].Errors)
                  {
                    <div class="invalid-feedback">
                        @error.ErrorMessage
                    </div>
                  }
                    
            }
        </div>
        <div class="form-group">
            <label asp-for="password"></label>
            <input asp-for="password" type="password" class="form-control" placeholder="Password">
        </div>
        <button type="submit" class="btn btn-primary">Sign In!</button>
    </form>
</div>